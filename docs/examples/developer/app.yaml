# That's a full Application manifest, as of developer's point of view
# Real manifests would not use all the features represented here

# Single file may contain multiple manifests separated with "---"

# Scroll down to get full manifest with all possible parameters

#
# Starter example
#


---

name: whoami

owners:
  - @agrrh
  - mycorp/examples

purpose: business
priority: low
profile: generic

dependencies:
  - database: postgres

envs:
  production:
    size: small
    replicas: 2

  staging:
    size: tiny
    replicas: 1

---

#
# Full example
#

# Application name, required
name: my-cool-application

# Application owners, required
owners:
  - @i.newton   # at least one person
  - developers  # at least one team as a fallback

# Application purpose, required
#   One of:
#   - business - part of company's product/service
#   - infrastructure - technical stuff, not intended to be accessible by business customers
#   May be used for scheduling, resource allocation, network access, etc.
purpose: business

# Priority, optional
#   - critical - essential for team/company operation, would be pinned on dashboards/status pages
#   - high - highly desired for team operation
#   - medium - useful for team operation, alerts would be suppressed during night time and weekends
#   - low - experimental stuff, we don't really care
priority: medium

# Profile, required
profile: generic
# May be good idea to start with language/framework version, followed with internal template version
# profile: golang-1.20-echo-4.11-api-0.1
# profile: python-3.10-etl-20231224.1

# Dependencies, optional
#   Stating something in this list would bring up database, storage or other known application
#   when bringing up QA and Production deployments
dependencies:
  # State application requirement
  - application: other-application

  # State database requirement, default params
  - database: postgres

  # State KV storage requirement, default params
  #   These params and values may vary depending on what your IaaS team provides
  - database: redis
    version: 6.2
    size: small

# Special environments parameters
envs:
  production:
    size: small
    replicas: 3
    autoscale: true
    env:
      LOG_LEVEL: warning

  staging:
    size: tiny
    replicas: 2
    autoscale: false
    env:
      LOG_LEVEL: info

# Special named parameters, optional
#   Reserved e.g. for custom interactions with your platform
features:
  - name: custom-autoscaler
    query: 'avg_over_time(cpu_usage{application="$application"}[5m]) > 80'
    initialReplicas: 3
    scaleStep: 2
    evaluation: 15s
